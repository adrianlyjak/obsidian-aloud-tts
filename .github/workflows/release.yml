name: Release Obsidian plugin

on:
  pull_request:
    branches:
      - "*"
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@latest-8 --activate

      - name: Build plugin
        run: |
          pnpm install
          pnpm run lint
          pnpm run format:check
          # pnpm run test
          pnpm run web:build
          pnpm run build

      # 上传构建产物
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            main.js
            styles.css
            manifest.json

  deploy_to_gitee:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # 下载构建产物
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: artifacts

      # 设置SSH密钥
      - name: Setup SSH Keys
        run: |
          # 创建.ssh目录
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # 保存私钥
          echo "${{ secrets.AI_LEARNING_ASSISTANT_PLUGINS_DIST }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          # 添加Gitee到known_hosts
          ssh-keyscan gitee.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # 克隆Gitee仓库，Gitee仓库对应的路径需要在GitHub仓库中设置
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables#defining-configuration-variables-for-multiple-workflows
      - name: Clone Gitee Repository
        run: |
          git clone "git@gitee.com:ai-learning-assistant-dev/ai-learning-assistant-plugin-dist.git" gitee-repo
          cd gitee-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # 同步文件
      - name: Sync files to Gitee
        run: |
          mkdir -p gitee-repo/"${{ github.repository }}"
          # 复制构建文件
          cp artifacts/main.js gitee-repo/"${{ github.repository }}"
          cp artifacts/styles.css gitee-repo/"${{ github.repository }}"
          cp artifacts/manifest.json gitee-repo/"${{ github.repository }}"

          cd gitee-repo

          # 检查变更
          if [ -z "$(git status --porcelain)" ]; then
            echo "没有文件变更"
          else
            echo "检测到文件变更，准备提交..."
            git add .
            git commit -m "自动同步: $(date +'%Y-%m-%d %H:%M:%S')"

            # 使用SSH推送
            git push origin master
            echo "同步完成!"
          fi
